# load required libraries
library(tidycensus)
library(rgdal)
library(readr)
library(dplyr)
library(tidyr)
library(tigris)
library(kwgeo)
library(googledrive)
library(utils)
options(tigris_use_cache = TRUE)
# set census api key
census_api_key("f6811bb29b8f3f4de930ececf654c6d0ebe6c7be", install = TRUE)
readRenviron("~/.Renviron")
# load required libraries
library(tidycensus)
library(rgdal)
library(readr)
library(dplyr)
library(tidyr)
library(tigris)
library(kwgeo)
# set carto account details
cartodb_id <- "peter-aldhous"
cartodb_api <- "4e0413e60d653cdd010fbfd6a3f233e50099bbd1"
fl_z <- zctas(state = "Florida", cb = FALSE, year = 2010)
r2cartodb(fl_z, "fl_zip", cartodb_id, cartodb_api)
indic_list <- c("NY.GDP.PCAP.PP.CD", "SH.DYN.MORT", "SP.DYN.TFRT.IN")
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2012, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, child_mortal=SH.DYN.MORT, fertil_rate=SP.DYN.TFRT.IN) %>%
filter(income != "Aggregates")
# load required packages
library(WDI)
library(dplyr)
library(readr)
library(stringr)
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2012, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, child_mortal=SH.DYN.MORT, fertil_rate=SP.DYN.TFRT.IN) %>%
filter(income != "Aggregates")
View(indicators)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$region <- str_trim(indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
indicators$income <- gsub(": OECD","", indicators$income)
install.packages(c("boot", "Matrix", "mgcv"))
install.packages(c("tidy", "verse"))
install.packages("tidyverse")
RStudio.Version()
RStudio.Version()
load("/Users/peteraldhous/SpiderOak Hive/state_of_the_union/sou.RData")
install.packages("quanteda", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("quanteda", lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
devtools::install_github("quanteda/quanteda")
library(rgdal)
library(RPostgreSQL)
setwd("/Volumes/Secomba/peteraldhous/Boxcryptor/Dropbox/ucb-dataj/2018/raw-data/week10")
# load shapefile
storms <- readOGR("storms", "storms")
glimpse(storms@data)
library(dplyr)
glimpse(storms@data)
storms@data <- storms@data %>%
mutate(name = as.character(name),
year = as.integer(year),
month = as.integer(month),
day = as.integer(day),
hour = as.integer(hour),
minute = as.integer(minute),
timestamp = as.POSIXct(timestamp),
record_ide = as.character(record_ide),
max_wind_knts = as.integer(max_wind_k),
max_wind_kph = as.integer(max_wind_1),
max_wind_mph = as.integer(max_wind_m),
min_press = as.integer(min_press)) %>%
select(-max_wind_k, -max.wind_l, -max_wind_m)
# look at data in attribute table
glimpse(storms@data)
# change data types
storms@data <- storms@data %>%
mutate(name = as.character(name),
year = as.integer(year),
month = as.integer(month),
day = as.integer(day),
hour = as.integer(hour),
minute = as.integer(minute),
timestamp = as.POSIXct(timestamp),
record_ide = as.character(record_ide),
max_wind_knts = as.integer(max_wind_k),
max_wind_kph = as.integer(max_wind_1),
max_wind_mph = as.integer(max_wind_m),
min_press = as.integer(min_press)) %>%
select(-max_wind_k, -max.wind_1, -max_wind_m)
storms@data <- storms@data %>%
mutate(name = as.character(name),
year = as.integer(year),
month = as.integer(month),
day = as.integer(day),
hour = as.integer(hour),
minute = as.integer(minute),
timestamp = as.POSIXct(timestamp),
record_ide = as.character(record_ide),
max_wind_knts = as.integer(max_wind_k),
max_wind_kph = as.integer(max_wind_1),
max_wind_mph = as.integer(max_wind_m),
min_press = as.integer(min_press)) %>%
select(-max_wind_k, -max_wind_1, -max_wind_m)
# look at data in attribute table
glimpse(storms@data)
plot(storms)
View(storms@data)
library(rgdal)
library(RPostgreSQL)
library(dplyr)
# load shapefile
storms <- readOGR("storms", "storms")
plot(storms)
# look at data in attribute table
glimpse(storms@data)
storms@data <- storms@data %>%
mutate(name = as.character(name),
year = as.integer(year),
month = as.integer(month),
day = as.integer(day),
hour = as.integer(hour),
minute = as.integer(minute),
timestamp = as.POSIXct(timestamp),
record_ident = as.character(record_ide),
status = as.character(status),
max_wind_knts = as.integer(max_wind_k),
max_wind_kph = as.integer(max_wind_1),
max_wind_mph = as.integer(max_wind_m),
min_press = as.integer(min_press)) %>%
select(-max_wind_k, -max_wind_1, -max_wind_m, record_ide)
# look at data in attribute table
glimpse(storms@data)
storms@data <- storms@data %>%
mutate(name = as.character(name),
year = as.integer(year),
month = as.integer(month),
day = as.integer(day),
hour = as.integer(hour),
minute = as.integer(minute),
timestamp = as.POSIXct(timestamp),
record_ident = as.character(record_ide),
status = as.character(status),
max_wind_knts = as.integer(max_wind_k),
max_wind_kph = as.integer(max_wind_1),
max_wind_mph = as.integer(max_wind_m),
min_press = as.integer(min_press)) %>%
select(-max_wind_k, -max_wind_1, -max_wind_m, -record_ide)
# load shapefile
storms <- readOGR("storms", "storms")
glimpse(storms@data)
View(storms@data)
storms@data <- storms@data %>%
mutate(name = as.character(name),
year = as.integer(year),
month = as.integer(month),
day = as.integer(day),
hour = as.integer(hour),
minute = as.integer(minute),
timestamp = as.POSIXct(timestamp),
record_ident = as.character(record_ide),
status = as.character(status),
max_wind_knts = as.integer(max_wind_k),
max_wind_kph = as.integer(max_wind_1),
max_wind_mph = as.integer(max_wind_m),
min_press = as.integer(min_press)) %>%
select(-max_wind_k, -max_wind_1, -max_wind_m, -record_ide)
# set up local DB connection
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "storms", host = "localhost")
library(rpostgis)
# set up local DB connection
system("createdb storms")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "storms", host = "localhost")
pgInsert(con, name = "storms", data.obj=storms, geom = "geom", df.mode = FALSE,
partial.match = FALSE, overwrite = FALSE, new.id = NULL,
row.names = FALSE, upsert.using = NULL, alter.names = FALSE,
encoding = NULL, return.pgi = FALSE)
# load shapefile
storms <- readOGR("storms", "storms")
View(storms@data)
storms@data <- storms@data %>%
mutate(name = as.character(name),
year = as.integer(year),
month = as.integer(month),
day = as.integer(day),
hour = as.integer(hour),
minute = as.integer(minute),
timestamp = as.POSIXct(timestamp),
record_ident = as.character(record_ide),
status = as.character(status),
max_wind_knts = as.integer(max_wind_k),
max_wind_kph = as.integer(max_wind_1),
max_wind_mph = as.integer(max_wind_m),
min_press = as.integer(min_press)) %>%
select(-max_wind_k, -max_wind_1, -max_wind_m, -record_ide)
pgInsert(con, name = "storms", data.obj=storms, geom = "geom", df.mode = FALSE,
partial.match = FALSE, overwrite = TRUE, new.id = NULL,
row.names = FALSE, upsert.using = NULL, alter.names = FALSE,
encoding = NULL, return.pgi = FALSE)
View(storms@data)
# load shapefile
storms <- readOGR("storms", "storms")
View(storms@data)
View(storms@data)
# look at data in attribute table
glimpse(storms@data)
storms@data <- storms@data %>%
mutate(name = as.integer(as.character(name)),
year = as.interger(as.character(year)),
month = as.integer(as.character(month)),
day = as.integer(as.character(day)),
hour = as.integer(as.character(hour)),
minute = as.integer(as.character(minute)),
timestamp = as.POSIXct(timestamp),
record_ident = as.character(record_ide),
status = as.character(status),
max_wind_knts = as.integer(as.character(max_wind_k)),
max_wind_kph = as.integer(as.character(max_wind_1)),
max_wind_mph = as.integer(as.character(max_wind_m)),
min_press = as.integer(as.character(min_press))) %>%
select(-max_wind_k, -max_wind_1, -max_wind_m, -record_ide)
storms <- readOGR("storms", "storms")
# quick plot to check it looks right
plot(storms)
# look at data in attribute table
glimpse(storms@data)
View(storms@data)
# change data types, remove abbreviated column names
storms@data <- storms@data %>%
mutate(name = as.integer(as.character(name)),
year = as.integer(as.character(year)),
month = as.integer(as.character(month)),
day = as.integer(as.character(day)),
hour = as.integer(as.character(hour)),
minute = as.integer(as.character(minute)),
timestamp = as.POSIXct(timestamp),
record_ident = as.character(record_ide),
status = as.character(status),
max_wind_knts = as.integer(as.character(max_wind_k)),
max_wind_kph = as.integer(as.character(max_wind_1)),
max_wind_mph = as.integer(as.character(max_wind_m)),
min_press = as.integer(as.character(min_press))) %>%
select(-max_wind_k, -max_wind_1, -max_wind_m, -record_ide)
# look at data in attribute table
glimpse(storms@data)
# load required packages
library(rgdal)
library(RPostgreSQL)
library(rpostgis)
library(dplyr)
# load shapefile
storms <- readOGR("storms", "storms")
# quick plot to check it looks right
plot(storms)
# look at data in attribute table
glimpse(storms@data)
View(storms@data)
# change data types, remove abbreviated column names
storms@data <- storms@data %>%
mutate(name = as.character(name),
year = as.integer(as.character(year)),
month = as.integer(as.character(month)),
day = as.integer(as.character(day)),
hour = as.integer(as.character(hour)),
minute = as.integer(as.character(minute)),
timestamp = as.POSIXct(timestamp),
record_ident = as.character(record_ide),
status = as.character(status),
max_wind_knts = as.integer(as.character(max_wind_k)),
max_wind_kph = as.integer(as.character(max_wind_1)),
max_wind_mph = as.integer(as.character(max_wind_m)),
min_press = as.integer(as.character(min_press))) %>%
select(-max_wind_k, -max_wind_1, -max_wind_m, -record_ide)
# create DB and set up local connection
system("createdb storms")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "storms", host = "localhost")
# load data
pgInsert(con, name = "storms", data.obj = storms, geom = "geom", df.mode = FALSE,
partial.match = FALSE, overwrite = TRUE, new.id = NULL,
row.names = FALSE, upsert.using = NULL, alter.names = FALSE,
encoding = NULL, return.pgi = FALSE)
knitr::opts_chunk$set(echo = TRUE)
storms_tracks <- collect(con, storms_tracks)
# Fetch the storm tracks data from the DB
storms_tracks <- dbSendQuery(con, "SELECT * from storms_tracks")
# Fetch the storm tracks data from the DB
storms_tracks <- dbReadDataFrame(con, storms_tracks, df = NULL)
# plot
plot(storms_tracks)
# Fetch the storm tracks data from the DB
storms_tracks <- dbReadDataFrame(con, storms_tracks, df = NULL)
# Fetch the storm tracks data from the DB
storms_tracks <- readOGR(dsn="PG:dbname='storms'","storms_tracks")
# Fetch the storm tracks data from the DB
storms_tracks <- dbGetQuery(con, "SELECT * FROM storms_tracks")
# Fetch the storm tracks data from the DB
storms_tracks <- dbGetQuery(con, "SELECT name,year,geom FROM storms_tracks")
install.packages("sf", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
View(storms_tracks)
View(storms_tracks)
