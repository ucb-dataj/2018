[
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "ALERT",
          "name": "ALERT ISSUE DATE",
          "type": "text",
          "columnName": "ALERT ISSUE DATE"
        }
      ]
    }
  },
  {
    "op": "core/column-split",
    "description": "Split column CITY/STATE by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CITY/STATE",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/column-split",
    "description": "Split column NAME by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "NAME",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column NAME 2 using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "NAME 2",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-split",
    "description": "Split column NAME 2 by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "NAME 2",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": " ",
    "regex": false,
    "maxColumns": 2
  },
  {
    "op": "core/column-rename",
    "description": "Rename column ALERT ISSUE DATE to alert_date",
    "oldColumnName": "ALERT ISSUE DATE",
    "newColumnName": "alert_date"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column NAME 1 to last_name",
    "oldColumnName": "NAME 1",
    "newColumnName": "last_name"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column NAME 2 1 to first_name",
    "oldColumnName": "NAME 2 1",
    "newColumnName": "first_name"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column NAME 2 2 to middle_name",
    "oldColumnName": "NAME 2 2",
    "newColumnName": "middle_name"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column NAME 3 to name_suffix",
    "oldColumnName": "NAME 3",
    "newColumnName": "name_suffix"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column CITY/STATE 1 to city",
    "oldColumnName": "CITY/STATE 1",
    "newColumnName": "city"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column CITY/STATE 2 to state",
    "oldColumnName": "CITY/STATE 2",
    "newColumnName": "state"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column LICENSE NUMBER to license",
    "oldColumnName": "LICENSE NUMBER",
    "newColumnName": "license"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column TYPE OF ACTION to action_type",
    "oldColumnName": "TYPE OF ACTION",
    "newColumnName": "action_type"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column DATE OF ACTION to action_date",
    "oldColumnName": "DATE OF ACTION",
    "newColumnName": "action_date"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column state using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "state",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name_suffix using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name_suffix",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  }
]